var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./net/Method", "./net/StitchAuthDocRequest"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Method_1 = __importDefault(require("./net/Method"));
    var StitchAuthDocRequest_1 = require("./net/StitchAuthDocRequest");
    var CoreStitchAppClient = (function () {
        function CoreStitchAppClient(authRequestClient, routes) {
            this.authRequestClient = authRequestClient;
            this.routes = routes;
        }
        CoreStitchAppClient.prototype.callFunctionInternal = function (name, args) {
            return this.authRequestClient.doAuthenticatedRequestWithDecoder(this.getCallFunctionRequest(name, args));
        };
        CoreStitchAppClient.prototype.getCallFunctionRequest = function (name, args) {
            var body = {
                arguments: args,
                name: name
            };
            var reqBuilder = new StitchAuthDocRequest_1.StitchAuthDocRequest.Builder();
            reqBuilder.withMethod(Method_1.default.POST).withPath(this.routes.functionCallRoute);
            reqBuilder.withDocument(body);
            return reqBuilder.build();
        };
        return CoreStitchAppClient;
    }());
    exports.default = CoreStitchAppClient;
});
//# sourceMappingURL=CoreStitchAppClient.js.map